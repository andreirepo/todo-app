version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--entrypoints.traefik.address=:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-net
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/dashboard`) || PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=web"

  todo-db:
    image: mongo:4.4
    container_name: todo-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    healthcheck:
      test: |
        mongo --quiet \
        --username ${MONGO_ROOT_USERNAME} \
        --password ${MONGO_ROOT_PASSWORD} \
        --eval "db.adminCommand('ping')"
      interval: 15s
      timeout: 10s
      retries: 5
    volumes:
      - todo-data:/data/db
    networks:
      - traefik-net

  todo-be:
    env_file:
      - .env
    build:
      context: .
      dockerfile: app/server/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        NPM_TOKEN: dummy_value
    container_name: todo-be
    environment:
      NODE_OPTIONS: ${NODE_ENV:-development} --enable-source-maps
      UV_THREADPOOL_SIZE: ${UV_THREADPOOL_SIZE}
      MONGO_URI: "mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@todo-db:27017/todos?authSource=admin"
      BASE_PATH: "/"
    ports:
      - "5000:5000"
    depends_on:
      todo-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s
      timeout: 10s
      start_period: 60s
      retries: 5
    networks:
      - traefik-net
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todo-api.rule=PathPrefix(`/api/todo`)"
      - "traefik.http.routers.todo-api.entrypoints=web"
      - "traefik.http.routers.todo-api.service=todo-api"
      - "traefik.http.services.todo-api.loadbalancer.server.port=5000"

  todo-fe:
    build: 
      context: .
      dockerfile: app/client/Dockerfile
      args:
        API_URL: /api/todo
        BASE_URL: /
    container_name: todo-fe
    environment:
      NODE_ENV: production
      API_URL: /api/todo
      BASE_URL: /
    volumes:
      - ./app/client/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      todo-be:
        condition: service_healthy
    networks:
      - traefik-net
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todo-frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.todo-frontend.entrypoints=web"
      - "traefik.http.routers.todo-frontend.service=todo-frontend"
      - "traefik.http.services.todo-frontend.loadbalancer.server.port=3000"

networks:
  traefik-net:
    driver: bridge

volumes:
  todo-data:
